// TCH Helpers
#include "$CppIOHelperPath"
#include "$CppRandomHelperPath"

// Generator module
#include "$GeneratorHeaderPath"

// Standard libraries
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <stdexcept>

// Main function
int main(int argc, char **argv){

    // Fix seed
    std::vector<std::string> genscript;
    for(int i=1; i<argc; i++) genscript.push_back(std::string(argv[i]));
    TCH::seed(genscript);

    // Execution
    $InitParameters;
    try{
        generate(genscript, $SendParameters);
    }
    catch(std::runtime_error err){
        std::cerr << "Generate function failed: " 
            << err.what() << std::endl;
        return $ExitCodeGeneratorFailed;
    }

    // Print out
    try{
        std::ofstream outfile(argv[1]);
        $PrintParameters;
    }
    catch(std::runtime_error err){
        std::cerr << "Failed to print parameters on generator: "
            << err.what() << std::endl;
        return $ExitCodeGeneratorFailed;
    }

    // Success
    return $ExitCodeSuccess;
}